<configuration>

	<!-- 变量LOG_HOME 存放日志的统一路径 -->
	<property name="LOG_HOME" value="netty-demo/logs" />
	<!-- 变量APP_NAME 统一路径底下 存放指定应用的log路径 -->
	<property name="APP_NAME" value="netty-demo"/>

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!--定义控制台输出格式-->
		<encoder charset="utf-8">
			<pattern> %date [%thread] %-5level %logger{36}# %M : %L - %message%n</pattern>
		</encoder>
	</appender>

	<!-- 滚动文件输出info级别日志 -->
	<appender name="FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 指定日志文件的名称 -->
		<file>${LOG_HOME}/${APP_NAME}/info.log</file>

		<!-- 配置追加写入 -->
		<append>true</append>

		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

		<!-- 滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 滚动文件名称  -->
			<fileNamePattern>${LOG_HOME}/${APP_NAME}/info-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。
                注意，删除旧文件时， 那些为了归档而创建的目录也会被删除。-->
			<MaxHistory>50</MaxHistory>
			<!-- 当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动 -->
			<maxFileSize>100MB</maxFileSize>
			<!-- 设置文件总大小 -->
			<totalSizeCap>20GB</totalSizeCap>
		</rollingPolicy>

		<!-- 日志输出格式-->
		<encoder charset="utf-8">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 滚动文件输出error级别日志 -->
	<appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 指定日志文件的名称 -->
		<file>${LOG_HOME}/${APP_NAME}/error.log</file>

		<!-- 配置追加写入 -->
		<append>true</append>

		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

		<!-- 滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 滚动文件名称  -->
			<fileNamePattern>${LOG_HOME}/${APP_NAME}/error-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。
                注意，删除旧文件时， 那些为了归档而创建的目录也会被删除。-->
			<MaxHistory>50</MaxHistory>
			<!-- 当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动 -->
			<maxFileSize>100MB</maxFileSize>
			<!-- 设置文件总大小 -->
			<totalSizeCap>20GB</totalSizeCap>
		</rollingPolicy>

		<!-- 日志输出格式-->
		<encoder charset="utf-8">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 开发/测试 调试时可以设置debug模式查看sql语句 org.xuyk.netty.demo为包名 -->
	<logger name="org.xuyk.netty.demo" level="DEBUG" />

	<root level="info">
		<!-- 日志追加 -->
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE-INFO" />
		<appender-ref ref="FILE-ERROR" />
	</root>

</configuration>